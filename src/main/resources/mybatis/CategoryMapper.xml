<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.web.emall.mappers.CategoryMapper">
  <resultMap id="BaseResultMap" type="org.web.emall.models.Category">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_use" jdbcType="BIT" property="isUse" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="paixu" jdbcType="INTEGER" property="paixu" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="date_add" jdbcType="TIMESTAMP" property="dateAdd" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>

  <select id="selectCategotyById" resultMap="BaseResultMap" parameterType="int">
      SELECT * FROM category where id = #{category_id}
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, is_use, `key`, `level`, `name`, paixu, pid, `type`, user_id, date_add, icon
  </sql>
  <select id="selectByExample" parameterType="org.web.emall.models.CategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.web.emall.models.CategoryExample">
    delete from category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.web.emall.models.Category">
    insert into category (id, is_use, key, level, 
      name, paixu, pid, type, 
      user_id, date_add, icon
      )
    values (#{id,jdbcType=INTEGER}, #{isUse,jdbcType=BIT}, #{key,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{paixu,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{dateAdd,jdbcType=TIMESTAMP}, #{icon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.web.emall.models.Category">
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isUse != null">
        is_use,
      </if>
      <if test="key != null">
        key,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="paixu != null">
        paixu,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="dateAdd != null">
        date_add,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isUse != null">
        #{isUse,jdbcType=BIT},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="paixu != null">
        #{paixu,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="dateAdd != null">
        #{dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.web.emall.models.CategoryExample" resultType="java.lang.Long">
    select count(*) from category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update category
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isUse != null">
        is_use = #{record.isUse,jdbcType=BIT},
      </if>
      <if test="record.key != null">
        key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.paixu != null">
        paixu = #{record.paixu,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.dateAdd != null">
        date_add = #{record.dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update category
    set id = #{record.id,jdbcType=INTEGER},
      is_use = #{record.isUse,jdbcType=BIT},
      key = #{record.key,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      paixu = #{record.paixu,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      date_add = #{record.dateAdd,jdbcType=TIMESTAMP},
      icon = #{record.icon,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.web.emall.models.Category">
    update category
    <set>
      <if test="isUse != null">
        is_use = #{isUse,jdbcType=BIT},
      </if>
      <if test="key != null">
        key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="paixu != null">
        paixu = #{paixu,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="dateAdd != null">
        date_add = #{dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.web.emall.models.Category">
    update category
    set is_use = #{isUse,jdbcType=BIT},
      key = #{key,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      paixu = #{paixu,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      date_add = #{dateAdd,jdbcType=TIMESTAMP},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>