<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.web.emall.mappers.UserMapper">
  <resultMap id="Base" type="org.web.emall.models.User">
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="date_add" jdbcType="TIMESTAMP" property="dateAdd" />
    <result column="date_login" jdbcType="TIMESTAMP" property="dateLogin" />
    <result column="ip_add" jdbcType="VARCHAR" property="ipAdd" />
    <result column="ip_login" jdbcType="VARCHAR" property="ipLogin" />
    <result column="is_idcard_check" jdbcType="BIT" property="isIdcardCheck" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="source_str" jdbcType="VARCHAR" property="sourceStr" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="status_str" jdbcType="VARCHAR" property="statusStr" />
  </resultMap>
  <resultMap id="BaseResultMap" type="org.web.emall.models.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="date_add" jdbcType="TIMESTAMP" property="dateAdd" />
    <result column="date_login" jdbcType="TIMESTAMP" property="dateLogin" />
    <result column="ip_add" jdbcType="VARCHAR" property="ipAdd" />
    <result column="ip_login" jdbcType="VARCHAR" property="ipLogin" />
    <result column="is_idcard_check" jdbcType="BIT" property="isIdcardCheck" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="source_str" jdbcType="VARCHAR" property="sourceStr" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="status_str" jdbcType="VARCHAR" property="statusStr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, avatar_url, city, date_add, date_login, ip_add, ip_login, is_idcard_check, mobile, 
    nick, province, source, source_str, status, status_str
  </sql>
  <select id="selectByExample" parameterType="org.web.emall.models.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.web.emall.models.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.web.emall.models.User">
    insert into user (id, avatar_url, city, 
      date_add, date_login, ip_add, 
      ip_login, is_idcard_check, mobile, 
      nick, province, source, 
      source_str, status, status_str
      )
    values (#{id,jdbcType=INTEGER}, #{avatarUrl,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{dateAdd,jdbcType=TIMESTAMP}, #{dateLogin,jdbcType=TIMESTAMP}, #{ipAdd,jdbcType=VARCHAR}, 
      #{ipLogin,jdbcType=VARCHAR}, #{isIdcardCheck,jdbcType=BIT}, #{mobile,jdbcType=VARCHAR}, 
      #{nick,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER}, 
      #{sourceStr,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{statusStr,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.web.emall.models.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="dateAdd != null">
        date_add,
      </if>
      <if test="dateLogin != null">
        date_login,
      </if>
      <if test="ipAdd != null">
        ip_add,
      </if>
      <if test="ipLogin != null">
        ip_login,
      </if>
      <if test="isIdcardCheck != null">
        is_idcard_check,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nick != null">
        nick,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="sourceStr != null">
        source_str,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="statusStr != null">
        status_str,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="dateAdd != null">
        #{dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="dateLogin != null">
        #{dateLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="ipAdd != null">
        #{ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="ipLogin != null">
        #{ipLogin,jdbcType=VARCHAR},
      </if>
      <if test="isIdcardCheck != null">
        #{isIdcardCheck,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nick != null">
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="sourceStr != null">
        #{sourceStr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="statusStr != null">
        #{statusStr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.web.emall.models.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.dateAdd != null">
        date_add = #{record.dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateLogin != null">
        date_login = #{record.dateLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ipAdd != null">
        ip_add = #{record.ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.ipLogin != null">
        ip_login = #{record.ipLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.isIdcardCheck != null">
        is_idcard_check = #{record.isIdcardCheck,jdbcType=BIT},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nick != null">
        nick = #{record.nick,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.sourceStr != null">
        source_str = #{record.sourceStr,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.statusStr != null">
        status_str = #{record.statusStr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      date_add = #{record.dateAdd,jdbcType=TIMESTAMP},
      date_login = #{record.dateLogin,jdbcType=TIMESTAMP},
      ip_add = #{record.ipAdd,jdbcType=VARCHAR},
      ip_login = #{record.ipLogin,jdbcType=VARCHAR},
      is_idcard_check = #{record.isIdcardCheck,jdbcType=BIT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nick = #{record.nick,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      source_str = #{record.sourceStr,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      status_str = #{record.statusStr,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.web.emall.models.User">
    update user
    <set>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="dateAdd != null">
        date_add = #{dateAdd,jdbcType=TIMESTAMP},
      </if>
      <if test="dateLogin != null">
        date_login = #{dateLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="ipAdd != null">
        ip_add = #{ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="ipLogin != null">
        ip_login = #{ipLogin,jdbcType=VARCHAR},
      </if>
      <if test="isIdcardCheck != null">
        is_idcard_check = #{isIdcardCheck,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nick != null">
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="sourceStr != null">
        source_str = #{sourceStr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="statusStr != null">
        status_str = #{statusStr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.web.emall.models.User">
    update user
    set avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      date_add = #{dateAdd,jdbcType=TIMESTAMP},
      date_login = #{dateLogin,jdbcType=TIMESTAMP},
      ip_add = #{ipAdd,jdbcType=VARCHAR},
      ip_login = #{ipLogin,jdbcType=VARCHAR},
      is_idcard_check = #{isIdcardCheck,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      source_str = #{sourceStr,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      status_str = #{statusStr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>